======================================
React Hook Form Library For Validation
======================================

As we just finished implementing form validation 
by scratch, let's instead use a form validation
library that makes input and form validation much 
easier 

Two very popular choices are: 

https://react-hook-form.com/

And 

https://formik.org/

These libraries make everything much easier out of 
the box, here's an example of the basic usage: 

`````````````````````````````````````````````````````````````````````````````````````````

import { useForm } from "react-hook-form"


export default function App() {
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  } = useForm()


  const onSubmit = (data) => console.log(data)


  console.log(watch("example")) // watch input value by passing the name of it


  return (
    /* "handleSubmit" will validate your inputs before invoking "onSubmit" */
    <form onSubmit={handleSubmit(onSubmit)}>
      {/* register your input into the hook by invoking the "register" function */}
      <input defaultValue="test" {...register("example")} />


      {/* include validation with required or other standard HTML validation rules */}
      <input {...register("exampleRequired", { required: true })} />
      {/* errors will return when field validation fails  */}
      {errors.exampleRequired && <span>This field is required</span>}


      <input type="submit" />
    </form>
  )
}

`````````````````````````````````````````````````````````````````````````````````````````

The first thing to note is instead of importing useState 
we use the libraries useForm hook