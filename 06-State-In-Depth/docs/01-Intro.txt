==============
State In Depth
==============

This section we'll go more in depth on state 
management, updating state, in the below function 
we use setCount with a current variable, that 
current var contains our piece of state in 
the current form

export default function Counter(){
    const [num, setCount] = useState(0);

    const incrementNum = () => {
        setCount(num + 1)
    }
    const addThree = () => {
        // in React when we want to use the current 
        // value of the state var, we use this below 
        // syntax, below c represents whatever the 
        // current value of num, the state var, actually
        // is

        setCount(current => current + 1)

        // And if we repeat this three times, react adds
        // a queue like structure:

        setCount(current => current + 1)
        setCount(current => current + 1)

        // By using this callback like structure, we 
        // can make changes to state, which depend on 
        // retaining the current or 'current' value of a given 
        // state var
    }  
        

This only comes into play when we for sure have 
state that depends on the current piece, if we 
just need to provide a new value that doesn't 
need to know about any current version of the 
state var, then it doesn't matter 