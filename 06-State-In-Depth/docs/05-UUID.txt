================================
Generating Unique ID's With UUID
================================

In order to remove any value from a given array,
each value will need a unique identifier, 
there's a package available called uuid that 
makes creating unique id's easy, UUID 

So we want each value to be an object with: 

{
    id: 'unique UUID here', 
    emoji: ':D'
}

To do this we can modify the initial state value 
we pass into useState to be an onject: 

const [emojis, setEmojis] = useState([{id: uuid(), emoji: ':D'}]);

Then when we add a new emoji in the adEmoji function
we can pass that shape of the object in: 

        setEmojis(oldEmojis => {
            return [...oldEmojis, {id: uuid(), emoji: ':P'}]
        })
    
Then in the JSX we pass that unique id generated by 
UUID as a key prop: 

return (
        <div>
            {emojis.map(emoji => {
                return (
                    <span key={emoji.id} style={{fontSize: "4rem"}}>{emoji.emoji}</span>
                )
            })}
            <button onClick={addEmoji}>Add emoji</button>
        </div>
    )



    const deleteEmojiByUUID = (id) => {
        // Delete emoji by it's unique ID
        // Also need to pass in that id as an argument 
        // in the JSX below, but we can't pass it in 
        // directly like span onClick deleteEmojibyUUID(emoji.id)
        // but we can pass in an anonymous function 
        // that will execute when pressed

        // We still need to implement that actual 
        // meat and potatoes, how do we delete it? 

        // We can use the filter method! We filter based 
        // on the ID 
        setEmojis(prevArr => {
           return prevArr.filter(emoji => emoji.id !== id)
        })
       
        // We use filter, filter creates a copy 
        // of the emojis array, and returns everything 
        // that is NOT equal to the id passed in, leaving 
        // us with our unique emoji we want to delete
        
        // So we'll then set that new filtered array to 
        // be our state var

        }
     


    return (
        <div>
            {emojis.map(emoji => {
                return (
                    <span onClick={() => deleteEmojiByUUID(emoji.id) } key={emoji.id} style={{fontSize: "4rem", cursor: 'pointer'}}>{emoji.emoji}</span>
                )
            })}
            <button onClick={addEmoji}>Add emoji</button>
        </div>
    )
